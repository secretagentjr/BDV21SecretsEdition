class PistolTracer : ZTracer
{
    Default
    {
        Speed 100;
        Damage 0;
		+NoGravity
        ZTracer.Colors 0xff6666, 0x440000;

        //+StrifeDamage
    }

    States
    {
    Spawn:
        TNT1 A 1 Light("RedTracerGlow");
        Loop;
    }
}

CLASS BrutalPistol : BrutalWeapon
{
    // Behaves like tokens.
    bool PistolIsEmpty,Silencer,Inspected; // No Ammo.
    //bool Silencer; // Silencer.
	//bool Chambered; // Chambered Pistol
	//bool unloaded;
 DEFAULT
 {
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "Clip1";
	Weapon.AmmoType2 "BDPistolAmmo";
	weapon.selectionorder 3800;
	Weapon.SlotPriority 1; // Select below the pistol.
	Obituary "%o was shot down by %k's pistol.";
    AttackSound "None";
    Inventory.PickupSound "CLIPIN";
	Inventory.Pickupmessage "$GOTPISTOL";
	Inventory.Icon "PISTG0";
    +WEAPON.NOAUTOAIM;
	+WEAPON.NOAUTOFIRE;
	+WEAPON.NOALERT;
	+WEAPON.NO_AUTO_SWITCH;
	//+WEAPON.WIMPY_WEAPON;
    +FORCEXYBILLBOARD;
	Scale 0.9;
	Tag "Pistol";
}
	States
	{
	 
	 Inspect:
	    TNT1 A 0
		{
		 Invoker.Inspected = true;
		}
		PISS ABC 1 A_WeaponReady();
		PIST A 1 A_WeaponReady();
		PISR ABCDEMNOP 1 A_WeaponReady();
		PIR2 E 1 A_WeaponReady();
		TNT1 A 0 A_PlaySound("PSRLOUT",1);
		PIR2 A 1 A_WeaponReady();
		PISR ZYXWV 1 A_WeaponReady();
		PISR U 15 A_WeaponReady();
		PISR VWXYZ 1 A_WeaponReady();
		PIR2 A 1 A_WeaponReady();
		TNT1 A 0 A_PlaySound("PSRLIN",1);
		PIR2 BCDE 1 A_WeaponReady();
		PISR PONMEDCBA 1 A_WeaponReady();
	
	Ready3:
	Ready:
	    TNT1 A 0
		{
		If(CountInv("BDPistolAmmo") >=17 ) {return resolvestate("FixAmmo");}
		Else {return resolvestate(null);}
		}
		TNT1 A 0
		{
		 if(Invoker.Silencer == true){return resolvestate("SilencerReady");}
		 return resolvestate(null);
		}
        PIST F 0 A_JumpIfInventory("Kicking",1,"DoKick");
        PIST F 0 A_JumpIfInventory("Taunting",1,"Taunt");
		PIST F 0 A_JumpIfInventory("Salute1", 1, "Salute");
		PIST F 0 A_JumpIfInventory("Salute2", 1, "Salute");
        PIST F 0 A_JumpIfInventory("Reloading",1,"Reload");
		PIST F 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
		PIST F 0 A_JumpIfInventory("Unloading",1,"Unload");
		PIST A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		//PIST F 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		RIFG A 0 A_JumpIfInventory("QuickMelee",1,"DoQuickMelee");
		Loop;
	
	FixAmmo:
	    PIST F 0 A_Takeinventory("BDPistolAmmo",99999);
		PIST F 0 A_Giveinventory("BDPistolAmmo",16);
		Goto Ready;
	
	SilencerReady:
        PIST F 0 A_JumpIfInventory("Kicking",1,"DoKick");
        PIST F 0 A_JumpIfInventory("Taunting",1,"Taunt");
		PIST F 0 A_JumpIfInventory("Salute1", 1, "Salute");
		PIST F 0 A_JumpIfInventory("Salute2", 1, "Salute");
        PIST F 0 A_JumpIfInventory("Reloading",1,"Reload");
		PIST F 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
		PIST F 0 A_JumpIfInventory("Unloading",1,"Unload");
		PIST F 1 A_WeaponReady(WRF_ALLOWRELOAD);
		PIST F 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		RIFG A 0 A_JumpIfInventory("QuickMelee",1,"DoQuickMelee");
		Loop;
	
	/*
	CheckSprint:
		PIST F 1 A_WeaponReady(WRF_NOFIRE);
		PIST F 0 A_JumpIfInventory("IsStandingStill", 1, "Ready3");
		PIST F 0 A_JumpIfInventory("IsTacticalClass", 1, "StartSprint");
		Goto Ready;
		
	StartSprint:
		PIST F 1 A_WeaponReady(WRF_NOFIRE);
		PIST F 0 A_JumpIfInventory("UsedStamina", 40, "StopSprintTired");
		
	Sprinting:	
		PISP A 0 offset(-9,32) ;
		PIST F 0 offset(-9,32) A_JumpIfInventory("IsStandingStill", 1, "Ready3");
		PIST F 0 offset(-9,32) A_JumpIfInventory("UsedStamina", 100, "StopSprintTired");
		PLAY A 0 offset(-9,32) ACS_ExecuteAlways(852, 0, 0, 0, 0);//Makes player faster.
		PIST F 0 offset(-9,32) A_JumpIfInventory("PowerStrength", 1, 2);
		PIST F 0 offset(-9,32) A_GiveInventory("UsedStamina", 2);
		PIST F 0 offset(-9,32);
		PISP F 1 offset(-9,34) A_SetPitch(pitch -0.5);
		PISP F 1 offset(-6,36) A_SetPitch(pitch -0.5);
		PISP F 1 offset(-3,38) A_SetPitch(pitch -0.5);
		PISP F 1 offset(0,38) A_SetPitch(pitch -0.5);
		PISP F 1 offset(3,36) A_SetPitch(pitch -0.5);
		PISP F 1 offset(6,34) A_SetPitch(pitch -0.5);
		PISP F 1 offset(9,32) A_SetPitch(pitch -0.5);
		PIST F 0 offset(9,32) A_WeaponReady(WRF_NOBOB);
		PIST F 0 A_JumpIfInventory("Kicking",1,"DoKick");
        PIST F 0 A_JumpIfInventory("Taunting",1,"Taunt");
        PIST F 0 A_JumpIfInventory("Reloading",1,"Reload");
		PIST F 0 offset(-9,32) A_GiveInventory("UsedStamina", 3);
		PIST F 0 offset(9,33) A_SpawnItemEx("FootStep", 0, 0, 2, 0, 0, -4);
		PISP F 1 offset(9,34) A_SetPitch(pitch +0.5);
		PISP F 1 offset(6,36) A_SetPitch(pitch +0.5);
		PISP F 1 offset(3,38) A_SetPitch(pitch +0.5);
		PISP F 1 offset(0,38) A_SetPitch(pitch +0.5);
		PISP F 1 offset(-3,36) A_SetPitch(pitch +0.5);
		PISP F 1 offset(-6,34) A_SetPitch(pitch +0.5);
		PISP F 1 offset(-9,32) A_SetPitch(pitch +0.5);
		PIST F 0 offset(-9,32) A_WeaponReady(WRF_NOBOB);
		PIST F 0 offset(-9,32) A_JumpIfInventory("IsRunning", 1, "Sprinting");
		
		Goto StopSprint;
	StopSprintTired:
		PIST F 1;
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0);//Makes player slower.
		PIST F 0 A_PlaySound("Tired", 2);
		PIST F 0 A_TakeInventory("UsedStamina", 2);
		PIST F 5 A_WeaponReady;
		PIST F 0 A_TakeInventory("UsedStamina", 2);
		PIST F 5 A_WeaponReady;
		PIST F 0 A_TakeInventory("UsedStamina", 2);
		PIST F 5 A_WeaponReady;
		PIST F 0 A_TakeInventory("UsedStamina", 2);
		PIST F 5 A_WeaponReady;
		PIST F 0 A_TakeInventory("UsedStamina", 2);
		PIST F 5 A_WeaponReady;
		Goto Ready;
	StopSprint:
		PISP A 1;
		PIST F 0 A_JumpIfInventory("UsedStamina", 60, "StopSprintTired");
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0);//Makes player slower.
		Goto Ready;
	*/	
		
	Deselect:
        PIST F 0
		{
		 if(Invoker.Silencer == true){return resolvestate("DSSilencer");}
		 return resolvestate(null);
		}
		PISS BA 1;
		//PIST F 0 A_TakeInventory("TossGrenade", 1);
		TNT1 A 0 ZWL_QuickLower();
		Wait;
	
	DSSilencer:
	    //PIST F 0 A_JumpIfInventory("GoFatality", 1, "Steady");
        PIST F 0 A_PlaySound("CLIPIN");
		TNT1 A 0 ZWL_QuickLower();
        PISS FED 1;
        //PIST F 0 A_GunFlash;
		Wait;
		
	Select:
		PIST F 0
		{
		 A_Takeinventory("StartDualWield",1);
		 A_Giveinventory("GoSpecial",1);
		 A_Takeinventory("FistsSelected",1);
		 A_Takeinventory("SawSelected",1);
		 A_Takeinventory("ShotgunSelected",1);
		 A_Takeinventory("SSGSelected",1);
		 A_Takeinventory("MinigunSelected",1);
		 A_Takeinventory("PlasmaGunSelected",1);
		 A_Takeinventory("RocketLauncherSelected",1);
		 A_Takeinventory("GrenadeLauncherSelected",1);
		 A_Takeinventory("BFGSelected",1);
		 A_Takeinventory("BFG10kSelected",1);
		 A_Takeinventory("RailGunSelected",1);
		 A_Takeinventory("SubMachineGunSelected",1);
		 A_Takeinventory("RevenantLauncherSelected",1);
		 A_Takeinventory("LostSoulSelected",1);
		 A_Takeinventory("FlameCannonSelected",1);
		 A_Takeinventory("HasBarrel",1);
		}
		
		TNT1 A 0
		{
		 if(Invoker.Inspected == true){return resolvestate(null);}
		 return resolvestate("Inspect");
		}
		
		PIST F 0
		{
		 if(Invoker.Silencer == true){return resolvestate("SSilencer");}
		 return resolvestate(null);
		}
	    //PIST F 0 A_JumpIfInventory("GoFatality", 1, "Steady");
        PIST F 0 A_PlaySound("CLIPIN");
		TNT1 A 0 ZWL_QuickRaise();
        PISS ABC 1;
        //PIST F 0 A_GunFlash;
		Goto Ready;
	
	SSilencer:
	    //PIST F 0 A_JumpIfInventory("GoFatality", 1, "Steady");
        PIST F 0 A_PlaySound("CLIPIN");
		TNT1 A 0 ZWL_QuickRaise();
        PISS DEF 1;
        //PIST F 0 A_GunFlash;
		Goto SilencerReady;

	
    Fire:
        PIST F 0 A_JumpIfInventory("BDPistolAmmo",1,2);
        Goto NoAmmo;
        TNT1 AAAA 0;
		PIST F 0 
		{
		 if(Invoker.Silencer == true){return resolvestate("FireSilencer");}
		 return resolvestate(null);
		}
		PIST F 0 A_AlertMonsters;
		
		PIST F 0 A_PlaySound("FARSHT", 6);
        //PIST F 0 A_PlaySound("PFIRE", 1);
		TNT1 A 0 A_StartSound("PFIRE",1,CHANF_OVERLAP,0.5);
		PIST F 0 A_ZoomFactor(0.98);
		PIST F 0 A_FireProjectile("PistolCaseSpawn",-5,0,0,-9);
		PIST B 1 BRIGHT A_firebullets(random(0, 0), random(0, 0),1,40, "HitPuff", FBF_NORANDOM,8192,"DecorativeTracer",-5);
		PIST F 0 A_ZoomFactor(1.0);
		PIST F 0 A_Takeinventory("BDPistolAmmo",1);
		PIST F 0 A_Takeinventory("BDDualPistolAmmo",1);
        PIST C 1 A_SetPitch(pitch-0.3);
		PIST D 1 A_SetPitch(pitch-0.2);
		PIST E 1 A_SetPitch(pitch+0.1);
		//PIST E 1 A_SetPitch(pitch+0.1);
		//PIST F 1; //A_SetPitch(pitch+0.1);
		PIST A 5 A_WeaponReady();
		PIST A 4 A_REfire;
		Goto Ready;
	
	FireSilencer:
	    PIST F 0 A_PlaySound("SFIRE", 1);
		PIST F 0 A_FireProjectile("PistolCaseSpawn",-5,0,0,-9);
		PIST X 1 BRIGHT A_firebullets(random(0, 0), random(0, 0),1,40, "HitPuff", FBF_NORANDOM,8192,"DecorativeTracer",-5);
		PIST F 0 A_ZoomFactor(1.0);
		PIST F 0 A_Takeinventory("BDPistolAmmo",1);
		PIST F 0 A_Takeinventory("BDDualPistolAmmo",1);
        PIST H 1 A_SetPitch(pitch-0.3);
		PIST I 1 A_SetPitch(pitch-0.2);
		PIST J 1 A_SetPitch(pitch+0.2);
		//PIST L 1 A_SetPitch(pitch+0.1);
		PIST F 5 A_WeaponReady();
		PIST F 0 A_REfire;
		Goto Ready;
	
	AltFire:	
	Fire2: // Attach or Remove Silencer.
		TNT1 A 0
		{
		 // Remove Silencer if equipped.
		 if(Invoker.Silencer == true){return resolvestate("RemoveSilencer");}
		 // Silencer Equipped
		 Invoker.Silencer = true;
		 return resolvestate(null); // Continue
		}
	    PIS3 ABCDEFGHIJKL 1;
		TNT1 A 0 A_PlaySound("PLSAT", 1);
		PIS3 MNOPQRSTUV 1;
		Goto Ready3;
	RemoveSilencer:
	    TNT1 A 0
		{
		 Invoker.Silencer = false; // Silencer Removed.
		}
	    PIS4 ABCD 1;
		TNT1 A 0 A_PlaySound("PLSDET", 1);
		PIS4 EFGHIJKLMNOPQRST 1;
		Goto Ready3;
       	
				
	NoAmmo:
	    PIST F 0 
		{
		 if(Invoker.Silencer == true){return resolvestate("NoAmmoSilenced");}
		 return resolvestate(null);
		}
		RIFG A 0;
		RIFG A 0 A_ZoomFactor(1.0);
		RIFG A 0 A_Takeinventory("Zoomed",1);
		RIFG A 0 A_Takeinventory("ADSmode",1);
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		TNT1 A 0 A_PlaySound("weapons/empty", 4);
		//Goto Ready3;
		NoAmmo2:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt");
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute");
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute");
		RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution");
		RIFG A 0 A_JumpIfInventory("Kicking",1,"DoKick");
		PIST A 5 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOFIRE);
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "Ready3");
		RIFG A 0 A_JumpIfInventory("Clip1",1,"Reload");
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2");
		Goto Ready3;
	
	NoAmmoSilenced:
		RIFG A 0;
		RIFG A 0 A_ZoomFactor(1.0);
		RIFG A 0 A_Takeinventory("Zoomed",1);
		RIFG A 0 A_Takeinventory("ADSmode",1);
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		TNT1 A 0 A_PlaySound("weapons/empty", 4);
		//Goto Ready3;
		NoAmmo2:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt");
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute");
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute");
		RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution");
		RIFG A 0 A_JumpIfInventory("Kicking",1,"DoKick");
		PIST F 5 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOFIRE);
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "Ready3");
		RIFG A 0 A_JumpIfInventory("Clip1",1,"Reload");
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2");
		Goto Ready3;
	
    Reload:
		//PIST F 1 A_WeaponReady
		PIST F 0 A_Takeinventory("Reloading",1);
		PIST F 0 A_Takeinventory("ADSmode",1);
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",16,"Ready3");

        PIST F 0 A_JumpIfInventory("Clip1",1,3);
        Goto NoAmmo;
        TNT1 AAA 0;
		PIST F 0 A_Takeinventory("Zoomed",1);
        PIST F 0 A_ZoomFactor(1.0);
		PIST F 0 A_Takeinventory("Reloading",1);
		PIST F 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		PIST F 0 
		{
		 if(Invoker.Silencer == true){return resolvestate("ReloadSilenced");}
		 return resolvestate(null);
		}
		PISR ABCDE 1 A_WeaponReady(WRF_NOFIRE);
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",1,"ReloadT");
		RIFG A 0
		{
		if(Invoker.PistolIsEmpty  == true){return resolvestate("Reload.Insert");}
		return resolvestate(null);
		}
		PIST F 0
		{
		Invoker.PistolIsEmpty == true;
		A_PlaySound("PSRLOUT",1);
		}
		PISR FGHIJKLM 1 A_WeaponReady(WRF_NOFIRE);
		RIFR C 0 A_FireProjectile("EmptyClipSpawn",5,0,8,-4);	
		PISR NO 1 A_WeaponReady(WRF_NOFIRE);
		PISR P 10 A_WeaponReady(WRF_NOFIRE);
		PISR QRSTTTTUUVWX 1 A_WeaponReady(WRF_NOFIRE);
		//PISR LMMMNOP 1;
		//PISR T 1 Offset(0,31); // 1 Pixel Up
		PIST F 0 A_PlaySound("PSRLIN",1);
		PISR YZ 1 A_WeaponReady(WRF_NOFIRE);
		PIR2 ABCDE 1 A_WeaponReady(WRF_NOFIRE);
		Goto InsertBullets;
	Reload.Finish:
	    TNT1 A 0
		{
		 if(Invoker.Silencer == true){return resolvestate("Reload.FinishS");}
		 return resolvestate(null);
		}
		//TNT1 A 0 Offset(0,32);
		//PI2R C 1;
		PISR PONMEDCBA 1 A_WeaponReady(WRF_NOFIRE);
		//PISA A 1;
		Goto Ready;
		//Goto ChamberRound;
	
	ReloadT:
	    PISR NOP 1 A_WeaponReady(WRF_NOFIRE);
		PIR2 EF 1 A_WeaponReady(WRF_NOFIRE);
		PIST F 0 A_PlaySound("PSRLOUT",1);
		PIR2 GHIJKLM 1 A_WeaponReady(WRF_NOFIRE);
		//PISR NO 1;
		PISR P 10 A_WeaponReady(WRF_NOFIRE);
		PISR QRSTTTTUUVWX 1 A_WeaponReady(WRF_NOFIRE);
		PIST F 0 A_PlaySound("PSRLIN",1);
		PISR YZ 1 A_WeaponReady(WRF_NOFIRE);
		PIR2 ABCDE 1 A_WeaponReady(WRF_NOFIRE);
		//PIST F 0 A_PlaySound("PSRLIN",4);
		Goto InsertBullets2;
	ReloadFT:
	    TNT1 A 0 Offset(0,32);
		TNT1 A 0
		{
		 if(Invoker.Silencer == true){return resolvestate("ReloadSTF");}
		 return resolvestate(null);
		}
		PISR PONMEDCBA 1 A_WeaponReady(WRF_NOFIRE);
		Goto Ready3;
			
	ReloadSilenced:
	    PI2R ABCDE 1;
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",1,"ReloadST");
		RIFG A 0
		{
		if(Invoker.PistolIsEmpty  == true){return resolvestate("Reload.InsertS");}
		return resolvestate(null);
		}
		PIST F 0
		{
		Invoker.PistolIsEmpty == true;
		A_PlaySound("PSRLOUT",1);
		}
		PI2R FGHIJKLM 1 A_WeaponReady(WRF_NOFIRE);
		//PI2R GGHIJ 1;
		RIFR C 0 A_FireProjectile("EmptyClipSpawn",5,0,8,-4);
		PI2R NO 1 A_WeaponReady(WRF_NOFIRE);
		PI2R P 10 A_WeaponReady(WRF_NOFIRE);
		PI2R QRSTTTTUUVWX 1 A_WeaponReady(WRF_NOFIRE);
		//PI2R T 1 Offset(0,31);
		PIST F 0 A_PlaySound("PSRLIN",1);
		PI2R YZ 1 A_WeaponReady(WRF_NOFIRE);
		PI3R ABCDE 1 A_WeaponReady(WRF_NOFIRE);
		TNT1 A 0 A_JumpIfInventory("BDPistolAmmo",1,"InsertBullets2");
		Goto InsertBullets;
	Reload.FinishS:
	    //TNT1 A 0 Offset(0,32);
		PI2R PONMEDCBA 1 A_WeaponReady(WRF_NOFIRE);
		Goto Ready;
		//Goto SChamberRound;
	
	ReloadST:
	    PI2R NOP 1 A_WeaponReady(WRF_NOFIRE);
		PI3R EF 1 A_WeaponReady(WRF_NOFIRE);
		PIST F 0 A_PlaySound("PSRLOUT",1);
		PI3R GHIJKLM 1 A_WeaponReady(WRF_NOFIRE);
		PI2R P 10 A_WeaponReady(WRF_NOFIRE);
		PI2R QRSTTTTUUVWX 1 A_WeaponReady(WRF_NOFIRE);
		//PI2R UU 1 Offset(0,33);
		//PI2R VW 1 Offset(0,32);
		//PI2R K 10;
		//PI2R LMMMNOP 1;
		//PI2R T 1 Offset(0,31);
		PIST F 0 A_PlaySound("PSRLIN",1);
		PI2R YZ 1 A_WeaponReady(WRF_NOFIRE);
		PI3R ABCDE 1 A_WeaponReady(WRF_NOFIRE);
		Goto InsertBullets2;
	ReloadSTF:
		PI2R PONMEDCBA 1 A_WeaponReady(WRF_NOFIRE);
		Goto Ready3;
		
	ChamberRound:
	    TNT1 A 0; 
	    PISR YZ 1;
		PIST F 0 A_PlaySound("CHMBRSB", 1);
		PIRR ABC 1;
		PIST F 0 A_PlaySound("CHMBRSB", 1);
		PIRR DDCB 1;
		PIRR EF 1;
		Goto Ready3;
	
	SChamberRound:
		TNT1 A 0;
	    PI2R YZ 1;
		PIST F 0 A_PlaySound("CHMBRSB", 1);
		PI22 AAA 1;
		PIST F 0 A_PlaySound("CHMBRR", 1);
		PI22 BCD 1;
		Goto SilencerReady;
		
	TurboReload:
		PIST F 0
		{
		 Invoker.PistolIsEmpty == false;
		}
        PISS BA 0;
        Goto InsertBulletsTReload;
		
	InsertBullets:
		TNT1 AAAA 0;
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",15,"Reload.Finish");
		PIST F 0 A_JumpIfInventory("Clip1",1,3);
		Goto Ready;
        TNT1 AAAAAA 0;
		PIST F 0 A_Giveinventory("BDPistolAmmo",1);
		PIST F 0 A_Giveinventory("BDDualPistolAmmo",1);
		PIST F 0 A_Takeinventory("Clip1",1);
		Goto InsertBullets;
		
		TNT1 AAAAAAAAAA 0;
		PIST F 0 A_Takeinventory("Reloading",1);
		
		PIST F 0 A_Refire;
        Goto Ready;
		TNT1 AAAA 0;
		PIST F 0 A_Takeinventory("Reloading",1);
		
		PIST F 0 A_Refire;
        Goto Reload.Finish;
		
	InsertBullets2:
		TNT1 AAAA 0;
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",16,"ReloadFT");
		PIST F 0 A_JumpIfInventory("Clip1",1,3);
		Goto Ready;
        TNT1 AAAAAA 0;
		PIST F 0 A_Giveinventory("BDPistolAmmo",1);
		PIST F 0 A_Giveinventory("BDDualPistolAmmo",1);
		PIST F 0 A_Takeinventory("Clip1",1);
		Goto InsertBullets2;
		
		TNT1 AAAAAAAAAA 0;
		PIST F 0 A_Takeinventory("Reloading",1);
		PIST F 0 A_Refire;
        Goto Ready;
		TNT1 AAAA 0;
		PIST F 0 A_Takeinventory("Reloading",1);
		
		PIST F 0 A_Refire;
        Goto Ready;
	
	InsertBulletsTReload:
	    TNT1 AAAA 0;
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",16,15);
		PIST F 0 A_JumpIfInventory("Clip1",1,3);
		Goto Ready;
        TNT1 AAAAAA 0;
		PIST F 0 A_Giveinventory("BDPistolAmmo",1);
		PIST F 0 A_Giveinventory("BDDualPistolAmmo",1);
		PIST F 0 A_Takeinventory("Clip1",1);
		Goto InsertBullets2;
		
		TNT1 AAAAAAAAAA 0;
		PIST F 0 A_Takeinventory("Reloading",1);
		PIST F 0 A_Refire;
        Goto Ready;
		TNT1 AAAA 0;
		PIST F 0 A_Takeinventory("Reloading",1);
		
		PIST F 0 A_Refire;
        Goto Ready;
		
 	Spawn:
		PIST A 0;
		PIST G -1;
		Stop;
		
	Steady:
		TNT1 A 1;
		Goto Ready;
		
		
	Unload:
		//PIST F 1 A_WeaponReady;
		PIST F 0 A_Takeinventory("Unloading",1);
		PIST F 0 A_Takeinventory("ADSmode",1);
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",1,3);
        Goto NoAmmo;
        TNT1 AAA 0;
		PIST F 0 A_Takeinventory("Zoomed",1);
        PIST F 0 A_ZoomFactor(1.0);
		PIST F 0 A_GiveInventory ("Pumping", 1);
		PIST F 0 A_Takeinventory("Reloading",1);
		PIST F 0
		{
		Invoker.PistolIsEmpty = true;
		if(Invoker.Silencer == true){return resolvestate("Unload.S");}
		return resolvestate(null);
		}
        PISR ABCDEFRSTTT 1;
		PIST F 0 A_PlaySound("PSRLOUT",3);
		PISR UUVW 1;
		PISR KFEDCBA 1;
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",1,"RemoveBullets");
		Goto RemoveBullets;
	
	Unload.S:
	    PIST F 0 A_Takeinventory("Unloading",1);
		PIST F 0 A_Takeinventory("ADSmode",1);
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",1,3);
        Goto NoAmmo;
        TNT1 AAA 0;
		PIST F 0 A_Takeinventory("Zoomed",1);
        PIST F 0 A_ZoomFactor(1.0);
		PIST F 0 A_GiveInventory ("Pumping", 1);
		PIST F 0 A_Takeinventory("Reloading",1);
		PIST F 0
		{
		Invoker.PistolIsEmpty = true;
		}
        PI2R ABCDEFRSTTT 1;
		PIST F 0 A_PlaySound("PSRLOUT",3);
		PI2R UUVW 1;
		PI2R KFEDCBA 1;
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",1,"RemoveBullets");
		Goto RemoveBullets;
	    

	RemoveBullets:
		TNT1 AAAA 0;
		PIST F 0 A_JumpIfInventory("BDPistolAmmo",1,3);
		Goto Ready;
        TNT1 AAAAAA 0;
		PIST F 0 A_Takeinventory("BDPistolAmmo",1);
		PIST F 0 A_Takeinventory("BDDualPistolAmmo",1);
		PIST F 0 A_Giveinventory("Clip1",1);
		Goto RemoveBullets;
		
		TNT1 AAAAAAAAAA 0;
		PIST F 0 A_Takeinventory("Reloading",1);
		
		PIST F 0 A_Refire;
        Goto Ready;
		TNT1 AAAA 0;
		PIST F 0 A_Takeinventory("Reloading",1);
		
		PIST F 0 A_Refire;
        Goto Ready;
		
		
	DualWield:
		TNT1 A 1;
		PIST F 0 A_Print("Dual Wielding Isn't Available for this weapon atm.");
		Goto Ready;
	
	Flashkick:
	    PISK ABC 1;
		PISK D 13;
		PISK CBA 1;
		Stop;
	
	AirFlashkick:
	    PISK ABC 1;
		PISK D 14;
		PISK CBA 1;
		Stop;
	
	SlideFlashKick:
	    PISK ABC 1;
		PISK D 13;
		Stop;
	
	SlideFlashKickStop:
	    PISK D 10;
		PISK CBA 1;
		Stop;
	
	}
}