CLASS BrutalSMG : BrutalWeapon
{
bool Inspected;
float recoil; 
DEFAULT
{
	Weapon.AmmoUse1 0;
	Weapon.AmmoGive1 40;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "Clip1";
	Weapon.AmmoType2 "BDSMGAmmo";
	Obituary "%o was shot down by %k's SMG.";
    AttackSound "None";
    Inventory.PickupSound "CLIPIN";
	Inventory.Pickupmessage "You got the SMG!";
    +WEAPON.NOAUTOAIM;
    +WEAPON.NOAUTOFIRE;
    +FORCEXYBILLBOARD;
	+WEAPON.NOALERT;
	Scale 0.2;
	Tag "Sub-MachineGun";
}
action void A_SMGRecoil ()
    {
	    // Set the recoil amount
        Invoker.Recoil = CVar.GetCVar('bd_SMGrecoilscale', Player).Getfloat();
	}
	States
	{
	
	Inspect:
		TNT1 A 0
		{
		 Invoker.Inspected = true;
		}
		SMGI ABCDEFGHINOP 1 A_WeaponReady(WRF_ALLOWRELOAD);
		TNT1 A 0 A_StartSound("SMGBLTB",1,CHANF_OVERLAP,1);
		SMGI QRSTUVWXYZ 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SMI2 ABCDEFGHIJKLMN 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SMI2 O 10 A_WeaponReady(WRF_ALLOWRELOAD);
		SMI2 PQRS 1 A_WeaponReady(WRF_ALLOWRELOAD);
		TNT1 A 0 A_StartSound("SMGMAGIN",1,CHANF_OVERLAP,1);
		SMI2 TUVWXYZ 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SMI3 AB 1 A_WeaponReady(WRF_ALLOWRELOAD);
		Goto Ready3;
	 
	Ready3:
	Ready:
	    TNT1 A 0 A_SMGRecoil();
		TNT1 A 0 
		{
	      If(GetCvar("bd_smgdisablespistol")) 
		   {
		    A_TakeInventory("BrutalPistol",1);
		   } 
		}
		SMGG A 0;
		SMGG A 0 A_JumpIfInventory("Zoomed",1,"Ready2");
		SMGG A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SMGG A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		//SMGG A 0 A_JumpIfInventory("Unloading",1,"Unload");
		SMGG A 0 A_JumpIfInventory("Kicking",1,"DoKick");
        SMGG A 0 A_JumpIfInventory("Taunting",1,"Taunt");
		SMGG A 0 A_JumpIfInventory("Salute1", 1, "Salute");
		SMGG A 0 A_JumpIfInventory("Salute2", 1, "Salute");
		SMGG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
		//SMGG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		SMGG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		SMGG A 0 A_JumpIfInventory("QuickMelee",1,"DoQuickMelee");
		//SMGG A 0 A_JumpIfInventory("StartDualWield",1,"DualWield");
		Loop;
		
	Ready2:
        SMGG A 0 A_JumpIfInventory("Kicking",1,"DoKick");
        SMGG A 0 A_JumpIfInventory("Taunting",1,"Taunt");
		SMGG A 0 A_JumpIfInventory("Salute1", 1, "Salute");
		SMGG A 0 A_JumpIfInventory("Salute2", 1, "Salute");
        //SMGG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		SMGG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
		SMGG A 0 A_JumpIfInventory("Unloading",1,"Unload");
		SMGG A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SMGA D 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SMGG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		SMGG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		SMGG A 0 A_JumpIfInventory("StartDualWield",1,"DualWield");
		Loop;	
	
	 AltFire:
        SMGG A 0;
		SMGG A 0 A_Giveinventory("GoSpecial",1);
		SMGG A 0 A_JumpIfInventory("Zoomed",1,"NoAim");
		SMGG A 0 A_Giveinventory("Zoomed",1);
        SMGG A 0 A_ZoomFactor(1.3);
		SMGG A 0 A_Giveinventory("ADSmode",1);
        SMGA ABC 1;
		SMGA D 7
		{
		A_WeaponReady(WRF_ALLOWRELOAD);
		If(CountInv("FiredPrimary") >=1 ) {return resolvestate("Fire");}
		return ResolveState(null);
		}
		SMGG A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim");
        Goto Ready2;
		
	   HoldAim:	
	    SMGG A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SMGA D 3
		{
		A_WeaponReady(WRF_ALLOWRELOAD);
		If(CountInv("FiredPrimary") >=1 ) {return resolvestate("Fire");}
		return ResolveState(null);
		}
		SMGG A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim");
		
       NoAim:
		SMGG A 0 A_Takeinventory("Zoomed",1);
        SMGG A 0 A_ZoomFactor(1.0);
		SMGG A 0 A_Giveinventory("GoSpecial",1);
		SMGG A 0 A_Takeinventory("ADSmode",1);
		SMGA CBA 1;
        Goto Ready3;
	
	/*
	CheckSprint:
		SMGG A 1 A_WeaponReady(WRF_NOFIRE);
		SMGG A 0 A_JumpIfInventory("IsStandingStill", 1, "Ready3");
		SMGG A 0 A_JumpIfInventory("IsTacticalClass", 1, "StartSprint");
		Goto Ready;
		
	StartSprint:
		SMGG A 1 A_WeaponReady(WRF_NOFIRE);
		SMGG A 0 A_JumpIfInventory("UsedStamina", 40, "StopSprintTired");
		
	Sprinting:	
		//Sprinting:	
		SMSP A 0 offset(-9,32) ;
		SMGG A 0 offset(-9,32) A_JumpIfInventory("IsStandingStill", 1, "Ready3");
		SMGG A 0 offset(-9,32) A_JumpIfInventory("UsedStamina", 100, "StopSprintTired");
		PLAY A 0 offset(-9,32) ACS_ExecuteAlways(852, 0, 0, 0, 0);//Makes player faster.
		SMGG A 0 offset(-9,32) A_JumpIfInventory("PowerStrength", 1, 2);
		SMGG A 0 offset(-9,32) A_GiveInventory("UsedStamina", 4);
		SMGG A 0 offset(-9,32);
		SMSP A 1 offset(-9,34) A_SetPitch(pitch -0.5);
		SMSP A 1 offset(-6,36) A_SetPitch(pitch -0.5);
		SMSP A 1 offset(-3,38) A_SetPitch(pitch -0.5);
		SMSP A 1 offset(0,38) A_SetPitch(pitch -0.5);
		SMSP A 1 offset(3,36) A_SetPitch(pitch -0.5);
		SMSP A 1 offset(6,34) A_SetPitch(pitch -0.5);
		SMSP A 1 offset(9,32) A_SetPitch(pitch -0.5);
		SMGG A 0 offset(9,32) A_WeaponReady(WRF_NOBOB);
		SMGG A 0 A_JumpIfInventory("Kicking",1,"DoKick");
        SMGG A 0 A_JumpIfInventory("Taunting",1,"Taunt");
        SMGG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		SMGG A 0 offset(-9,32) A_GiveInventory("UsedStamina", 4);
		SMGG A 0 offset(9,33) A_SpawnItemEx("FootStep", 0, 0, 2, 0, 0, -4);
		SMSP A 1 offset(9,34) A_SetPitch(pitch +0.5);
		SMSP A 1 offset(6,36) A_SetPitch(pitch +0.5);
		SMSP A 1 offset(3,38) A_SetPitch(pitch +0.5);
		SMSP A 1 offset(0,38) A_SetPitch(pitch +0.5);
		SMSP A 1 offset(-3,36) A_SetPitch(pitch +0.5);
		SMSP A 1 offset(-6,34) A_SetPitch(pitch +0.5);
		SMSP A 1 offset(-9,32) A_SetPitch(pitch +0.5);
		SMGG A 0 offset(-9,32) A_WeaponReady(WRF_NOBOB);
		SMGG A 0 offset(-9,32) A_JumpIfInventory("IsRunning", 1, "Sprinting");
		
		Goto StopSprint;
	StopSprintTired:
		SMGG A 1;
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0);//Makes player slower.
		SMGG A 0 A_PlaySound("Tired", 2);
		SMGG A 0 A_TakeInventory("UsedStamina", 2);
		SMGG A 5 A_WeaponReady;
		SMGG A 0 A_TakeInventory("UsedStamina", 2);
		SMGG A 5 A_WeaponReady;
		SMGG A 0 A_TakeInventory("UsedStamina", 2);
		SMGG A 5 A_WeaponReady;
		SMGG A 0 A_TakeInventory("UsedStamina", 2);
		SMGG A 5 A_WeaponReady;
		SMGG A 0 A_TakeInventory("UsedStamina", 2);
		SMGG A 5 A_WeaponReady;
		Goto Ready;
	StopSprint:
		SMSP A 1;
		SMGG A 0 A_JumpIfInventory("UsedStamina", 60, "StopSprintTired");
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0);//Makes player slower.
		Goto Ready;
	*/	
		
	Deselect:
        SMGS ABCD 1;
		SMGG A 0 A_TakeInventory("TossGrenade", 1);
		SMGG A 0 A_TakeInventory("Zoomed", 1);
		SMGG A 0 A_TakeInventory("ADSMode", 1);
		SMGG A 0 A_ZoomFactor(1.0);
		TNT1 A 0 ZWL_QuickLower();
		Wait;
		
	Select:
		SMGG A 0
		{
		 A_Takeinventory("StartDualWield",1);
		 A_Giveinventory("GoSpecial",1);
		 A_Takeinventory("FistsSelected",1);
		 A_Takeinventory("SawSelected",1);
		 A_Takeinventory("ShotgunSelected",1);
		 A_Takeinventory("SSGSelected",1);
		 A_Takeinventory("MinigunSelected",1);
		 A_Takeinventory("PlasmaGunSelected",1);
		 A_Takeinventory("RocketLauncherSelected",1);
		 A_Takeinventory("GrenadeLauncherSelected",1);
		 A_Takeinventory("BFGSelected",1);
		 A_Takeinventory("BFG10kSelected",1);
		 A_Takeinventory("RailGunSelected",1);
		 A_Takeinventory("SubMachineGunSelected",1);
		 A_Takeinventory("RevenantLauncherSelected",1);
		 A_Takeinventory("LostSoulSelected",1);
		 A_Takeinventory("FlameCannonSelected",1);
		 A_Takeinventory("HasBarrel",1);
		}
		TNT1 A 0
		{
		 if(Invoker.Inspected == true){return resolvestate(null);}
		 return resolvestate("Inspect");
		}
	    SMGG A 0 A_JumpIfInventory("GoFatality", 1, "Steady");
        SMGG A 0 A_PlaySound("CLIPIN");
		TNT1 A 0 ZWL_QuickRaise();
        SMGS DCBA 1;
		SMGG A 0 A_Takeinventory("StartDualWield",1);
        SMGG A 0 A_GunFlash;
		Goto Ready;

	
    Fire:
        SMGG A 0 A_JumpIfInventory("BDSMGAmmo",1,2);
        Goto NoAmmo;
        TNT1 AAAA 0;
		SMGG A 0 A_JumpIfInventory("Zoomed",1,"Fire2");
		SMGF A 1 BRIGHT
		{
		A_PlaySound("FARSHT", 6);
		A_StartSound("SMGFIRE",1,CHANF_DEFAULT,1);
		A_ALertMonsters();
		A_SpawnItemEx("PlayerMuzzle1",30,5,30);
		A_FireProjectile("PistolCaseSpawn",-5,0,0,-9);
		ZWL_FireHitscan(0, 20, pellets:1, spread:0, damagetype:"", pufftype:"hitpuff",tracertype:"PistolTracer",Offset:(0,0,-5));
		A_SetPitch(pitch-Invoker.Recoil, SPF_INTERPOLATE);
		A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		A_Takeinventory("BDSMGAmmo",1);
		A_Takeinventory("BDDualSMGAmmo",1);
		}
        SMGF BC 1
		{
		A_WeaponReady(WRF_NOFIRE);
		A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		}
		TNT1 A 0 A_Refire;
		SMGG A 1
		{
		A_WeaponReady(WRF_ALLOWRELOAD);
		A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		//If(CountInv("FiredPrimary") >=1 ) {return resolvestate("Fire");}
		//return resolvestate(null);
		}
		Goto Ready3;

	 Fire2:
		SMGG A 0 A_PlaySound("FARSHT", 6);
        //SMGG A 0 A_PlaySound("SMGFIRE", 1);
		SMGA E 1 BRIGHT
		{
		A_FireProjectile("PistolCaseSpawn",-5,0,0,-9);
		A_StartSound("SMGFIRE",1,CHANF_DEFAULT,1);
		ZWL_FireHitscan(0, 20, pellets:1, spread:0, damagetype:"", pufftype:"hitpuff",tracertype:"PistolTracer",Offset:(0,0,-5));
		A_SetPitch(pitch-Invoker.Recoil, SPF_INTERPOLATE);
		A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		A_Takeinventory("BDSMGAmmo",1);
		A_Takeinventory("BDDualSMGAmmo",1);
		A_SpawnProjectile("PistolCaseSpawn",-5,0,0,-9);
		}
		SMGG A 0 A_ZoomFactor(1.3);
        SMGA F 1 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		SMGA G 1 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		//SMGG A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SMGG A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim");//If still pressing alt fire, it means its holding aim
		SMGA D 1
		{
		A_WeaponReady(WRF_ALLOWRELOAD);
		A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 1, 0, 0);
		}
		Goto Ready2;	
		
	NoAmmo:
		RIFG A 0;
		RIFG A 0 A_ZoomFactor(1.0);
		RIFG A 0 A_Takeinventory("Zoomed",1);
		RIFG A 0 A_Takeinventory("ADSmode",1);
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		TNT1 A 0 A_PlaySound("weapons/empty", 4);
		NoAmmo2:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt");
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute");
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute");
		RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution");
		RIFG A 0 A_JumpIfInventory("Kicking",1,"DoKick");
		SMGG A 5 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOPRIMARY);
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "NoAmmo2");
		RIFG A 0 A_JumpIfInventory("Clip1",1,"Reload");
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2");
		Goto Ready3;
	
    Reload:
		SMGG A 1;
		SMGG A 0 A_Takeinventory("ADSmode",1);
		SMGG A 0 A_Takeinventory("Reloading",1);
		SMGG A 0 A_JumpIfInventory("BDSMGAmmo",41,"Ready");

        SMGG A 0 A_JumpIfInventory("Clip1",1,3);
        Goto NoAmmo;
        TNT1 AAA 0;
		SMGG A 0 A_Takeinventory("Zoomed",1);
        SMGG A 0 A_ZoomFactor(1.0);
		SMGG A 0 A_GiveInventory ("Pumping", 1);
		SMGG A 0 A_Takeinventory("Reloading",1);
		SMGG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		SMGG A 0 A_JumpIfInventory("HasUnloaded", 1, 2);
		//SMGG A 0 A_PlaySound("reload");
		SMGG A 0 A_JumpIfInventory("BDSMGAmmo",1,"TacticalReload");
		SMGR ABC 1;
		TNT1 A 0 A_StartSound("SMGMAGOT",1,CHANF_DEFAULT,1);
		SMGR DEFGHI 1;
		RIFR C 0 A_SpawnProjectile("EmptyClipSpawn",5,0,8,-4);
        SMGR JKLMNOPQSTUV 1;
		TNT1 A 0 A_StartSound("SMGMAGIN",1,CHANF_DEFAULT,1);
		SMGR WXYZ 1;
		SM2R AB 1;
		TNT1 A 0 A_StartSound("SMGBFW",1,CHANF_DEFAULT,1);
		SM2R CDEFGHIJKLMNO 1;
		//SMGG A 0 A_JumpIfInventory("BDSMGAmmo",1,"InsertBullets2");//40+1 effect
		Goto InsertBullets;
	
	TacticalReload:
		SM3R ABCDEFGHIJLKM 1;
		TNT1 A 0 A_StartSound("SMGMAGOT",1,CHANF_OVERLAP,1);
		SM3R NOPQRST 1;
		SM3R U 5;
		SM3R VWXYZ 1; 
		TNT1 A 0 A_StartSound("SMGMAGIN",1,CHANF_DEFAULT,1);
		SM4R ABCD 1;
		SM3R IHGFEDCBA 1;
		Goto InsertBullets2;
		
	TurboReload:
		SMGG A 0 A_Takeinventory("HasUnloaded",1);
        SMGS BA 0;
        Goto InsertBullets;
		
	InsertBullets:
		TNT1 AAAA 0;
		SMGG A 0 A_JumpIfInventory("BDSMGAmmo",40,15);
		SMGG A 0 A_JumpIfInventory("Clip1",1,3);
		Goto Ready;
        TNT1 AAAAAA 0;
		SMGG A 0 A_Giveinventory("BDSMGAmmo",1);
		//SMGG A 0 A_Giveinventory("BDDualSMGAmmo",1);
		SMGG A 0 A_Takeinventory("Clip1",1);
		Goto InsertBullets;
		
		TNT1 AAAAAAAAAA 0;
		SMGG A 0 A_Takeinventory("Reloading",1);
		
		SMGG A 0 A_Refire;
        Goto Ready;
		TNT1 AAAA 0;
		SMGG A 0 A_Takeinventory("Reloading",1);
		
		SMGG A 0 A_Refire;
        Goto Ready;
		
	InsertBullets2:
		TNT1 AAAA 0;
		SMGG A 0 A_JumpIfInventory("BDSMGAmmo",41,15);
		SMGG A 0 A_JumpIfInventory("Clip1",1,3);
		Goto Ready;
        TNT1 AAAAAA 0;
		SMGG A 0 A_Giveinventory("BDSMGAmmo",1);
		//SMGG A 0 A_Giveinventory("BDDualSMGAmmo",1);
		SMGG A 0 A_Takeinventory("Clip1",1);
		Goto InsertBullets2;
		
		TNT1 AAAAAAAAAA 0;
		SMGG A 0 A_Takeinventory("Reloading",1);
		SMGG A 0 A_Refire;
        Goto Ready;
		TNT1 AAAA 0;
		SMGG A 0 A_Takeinventory("Reloading",1);
		
		SMGG A 0 A_Refire;
        Goto Ready;
		
		
	
	/*
	 Unload:
		SMGG A 1;
		SMGG A 0 A_Takeinventory("ADSmode",1);
		SMGG A 0 A_Takeinventory("Unloading",1);
		SMGG A 0 A_JumpIfInventory("BDSMGAmmo",1,3);
		Goto NoAmmo;
        TNT1 AAA 0;

		SMGG A 0 A_Takeinventory("Zoomed",1);
        SMGG A 0 A_ZoomFactor(1.0);
		SMGG A 0 A_GiveInventory ("Pumping", 1);
		SMGG A 0 A_Takeinventory("Reloading",1);
		SMGG A 0 A_PlaySound("reload");
		SMGG A 0 A_Giveinventory("HasUnloaded",1);
        SMGR ABCDEEEFGHIJKKKKKKKKKK 1;
		
	RemoveBullets:
		TNT1 AAAA 0;
		SMGG A 0 A_JumpIfInventory("BDSMGAmmo",1,3);
		Goto Ready;
        TNT1 AAAAAA 0;
		SMGG A 0 A_Takeinventory("BDSMGAmmo",1);
		//SMGG A 0 A_Takeinventory("BDDualSMGAmmo",1);
		SMGG A 0 A_Giveinventory("Clip1",1);
		Goto RemoveBullets;
		
		TNT1 AAAAAAAAAA 0;
		SMGG A 0 A_Takeinventory("Reloading",1);
		
		SMGG A 0 A_Refire;
        Goto Ready;
		TNT1 AAAA 0;
		SMGG A 0 A_Takeinventory("Reloading",1);
		
		SMGG A 0 A_Refire;
        Goto Ready;
	
	*/
		
		
		
 	Spawn:
		SMGZ A -1;
		Stop;
		
		
	Steady:
		TNT1 A 1;
		Goto Ready;
		
	
	/*
	DualWield:
		TNT1 A 1;
		SMGG A 0 A_Takeinventory("StartDualWield",1);
		SMGG A 0 A_JumpIfInventory("IsTacticalClass", 1, "NoDual");//Tactical mode cant dual
		SMGG A 0 A_JumpIfInventory("DualSMG", 1, "GetDual");
		SMGG A 0 A_Print("You must have two identical weapons to dual wield.");
		Goto Ready;
	
		
	 GetDual:	
		SMGG A 0 A_Takeinventory("Zoomed",1);
		SMGG A 0 A_Takeinventory("ADSmode",1);
		SMGG A 0 A_TakeInventory("TossGrenade", 1);
		SMGG A 0 A_TakeInventory("Kicking",1);
        SMGG A 0 A_TakeInventory("Taunting",1);
        SMGG A 0 A_TakeInventory("Reloading",1);
		SMGG A 0 A_TakeInventory("Unloading",1);
		SMGG A 0 A_TakeInventory("Salute1", 1);
		SMGG A 0 A_TakeInventory("Salute2", 1);
        SMGG A 0 A_ZoomFactor(1.0);
		SMGG A 0 A_SelectWEapon("DualSMG");
		Goto Ready;
		
	NoDual:
		SMGG A 1;
		SMGG A 0 A_Print("You can't dual wield smgs when playing in Tactical Mode. Real operators never try to look cool in a firefight.");
		Goto Ready;
	*/	
	
	Flashkick:
	    SMGS ABC 1;
		SMGS D 13;
		SMGS CBA 1;
		Stop;
	
	AirFlashkick:
	    SMGS ABC 1;
		SMGS D 14;
		SMGS CBA 1;
		Stop;
	
	SlideFlashKick:
	    SMGS ABC 1;
		SMGS D 13;
		Stop;
	
	SlideFlashKickStop:
	    SMGS D 10;
		SMGS CBA 1;
		Stop;
	}
}

