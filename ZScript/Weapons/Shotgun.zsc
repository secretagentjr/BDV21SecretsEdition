//Actor Fire2ndBarrel: Inventory
//{
 //Inventory.MaxAmount 1
//}

//Actor AbleToBeInspected: Inventory
//{
 //Inventory.MaxAmount 1
//}


//Actor InspectShotgun: Inventory
//{
 //Inventory.MaxAmount 1
//}

//Actor ReloadingShotgun: Inventory
//{
 //Inventory.MaxAmount 1
//}

//Actor FireFromReloading: Inventory
//{
 //Inventory.MaxAmount 1
//}

//ACTOR Shot_Gun : BrutalWeapon
// "Insert Generic Shotgun Name Here"
CLASS Shot_Gun : BrutalWeapon
{
 bool ShotgunIsEmpty,Inspected,ReloadingShotgun;
 DEFAULT
 {
    //Game Doom;
	//SpawnID 27;
	Weapon.SelectionOrder 1300;
	Weapon.AmmoUse1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive1 0;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "AmmoShell";
	Weapon.AmmoType2 "ShotgunAmmo";
	Inventory.PickupMessage "$GOTSHOTGUN";
    Inventory.PickupSound "weapons/sgpump";
	Obituary "$OB_MPSHOTGUN";
    AttackSound "None";
    +WEAPON.NOALERT;
    +WEAPON.NOAUTOAIM;
	+WEAPON.NOAUTOFIRE;
	+FORCEXYBILLBOARD;
	Scale 0.9;
	Tag "Shotgun";
}
	States
	{
	
	InspectShotgun:
	    TNT1 A 0 A_Giveinventory("ScreenTilt",1);
		//TNT1 A 0 A_Giveinventory("InspectShotgun",1);
		TNT1 A 0
		{
		 Invoker.Inspected = true;
		}
		SHTN A 1 A_WeaponReady();
		SHTN BCDEFGHIJ 1
	    {
		  A_WeaponReady();
		  A_Setroll(roll+0.2, SPF_INTERPOLATE); 
	    }
		SHTN J 15 A_WeaponReady;
		SHTN Q 1
		{
		//A_Giveinventory("ScreenTilt",1);
		A_Setroll(roll-0.4, SPF_INTERPOLATE);
		A_WeaponReady();
		}
		SSHR A 1
		{
		  A_WeaponReady();
	    }
		SSHR BCD 1 A_WeaponReady();
		SSHR E 1
		{
		A_Setroll(roll+0.2, SPF_INTERPOLATE);
		A_WeaponReady();
		}
		SSHR F 1
		{
		A_Setroll(roll+0.2, SPF_INTERPOLATE);
		A_WeaponReady();
		}
        SSHR G 1
		{
		 A_Setroll(roll-0.2, SPF_INTERPOLATE);
		 A_PlaySound("insertshell");
		 //A_Giveinventory("ShotgunAmmo",1);
		 //A_Takeinventory("AmmoShell",1);
		 A_WeaponReady();
		}
		SSHR H 1
		{
		 A_Setroll(roll-0.2, SPF_INTERPOLATE);
		 A_WeaponReady();
		}
		SSHR A 1
		{
		  A_WeaponReady();
	    }
		SHTN Q 1
		{
		//A_Giveinventory("ScreenTilt",1);
		A_Setroll(roll+0.4, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		}
	   SHTN K 1
	   {
		 A_WeaponReady();
		  A_Setroll(roll-0.4, SPF_INTERPOLATE); 
				 A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN L 1
	   {
		  A_WeaponReady();
		  A_Setroll(roll-0.4, SPF_INTERPOLATE);  
	   }
	   SHTN M 1
	   {
		  A_WeaponReady();
		  A_Setroll(roll-0.8, SPF_INTERPOLATE); 
	   }
	   SHTN NOP 1
	   {
		  A_WeaponReady();
		  A_Setroll(roll-0.1, SPF_INTERPOLATE); 
	   }
	   SHTN PON 1
	   {
		  A_WeaponReady();
		  A_Setroll(roll+0.1, SPF_INTERPOLATE); 
	   }
	   SHTN M 1
	   {
	    A_WeaponReady();
		A_Setroll(roll+0.8, SPF_INTERPOLATE); 
		A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN L 1
	   {
		 A_WeaponReady();
		  A_Setroll(roll+0.4, SPF_INTERPOLATE);  
	   }
	   SHTN K 1
	   {
		  A_WeaponReady();
		  A_Setroll(roll+0.4, SPF_INTERPOLATE); 
	   }
	   SHTN J 1
	   {
		  A_WeaponReady();
		  A_Setroll(roll+0.2, SPF_INTERPOLATE); 
	   }
	   SHTN A 0;
	   SHTN IHGFEDCB 1
	   {
		  A_WeaponReady();
		  A_Setroll(roll-0.2, SPF_INTERPOLATE); 
	   }
	   SHTN A 1
	   {
	   A_Setroll(0, SPF_INTERPOLATE);
	   A_Takeinventory("ScreenTilt",1);
	   A_WeaponReady();
	   }
		SHTN A 15;
	    SHT8 I 1 A_WeaponReady();
	    SHT8 A 15 A_WeaponReady();
	    SHT8 I 1 A_WeaponReady();
		Goto Ready3;
		
    Spawn:
		SHTC A -1;
		Stop;
    	
	Select:
		SHTN A 0 A_Giveinventory("GoSpecial",1);
		SHTN A 0 A_Takeinventory("FistsSelected",1);
		SHTN A 0 A_Takeinventory("SawSelected",1);
		SHTN A 0 A_Giveinventory("ShotgunSelected",1);
		SHTN A 0 A_Takeinventory("SSGSelected",1);
		SHTN A 0 A_Takeinventory("MinigunSelected",1);
		SHTN A 0 A_Takeinventory("PlasmaGunSelected",1);
		SHTN A 0 A_Takeinventory("RocketLauncherSelected",1);
		SHTN A 0 A_Takeinventory("GrenadeLauncherSelected",1);
		SHTN A 0 A_Takeinventory("BFGSelected",1);
		SHTN A 0 A_Takeinventory("BFG10kSelected",1);
		SHTN A 0 A_Takeinventory("RailGunSelected",1);
		SHTN A 0 A_Takeinventory("SubMachineGunSelected",1);
		SHTN A 0 A_Takeinventory("RevenantLauncherSelected",1);
		SHTN A 0 A_Takeinventory("LostSoulSelected",1);
		SHTN A 0 A_Takeinventory("FlameCannonSelected",1);
		SHTN A 0 A_Takeinventory("HasBarrel",1);
		SHTN A 0 A_TakeInventory("TossGrenade", 1);
		TNT1 AAAAAAAAA 0 A_Raise;
		TNT1 AAAA 0 A_Raise;

	SelectAnimation:
        TNT1 A 0
		{
		 if(Invoker.Inspected == true){return resolvestate(null);}
		 return resolvestate("Inspect");
		}
		TNT1 AAAA 0 A_JumpIfInventory("GoFatality", 1, "Steady");
		SHTN A 0 A_JumpIfInventory("IsPlayingAsPurist", 1, "PuristGun");
        //SHSS ABCD 1 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 ZWL_QuickRaise();
		SHSS ABCD 1;
		SHTN A 0 A_PlaySound("weapons/sgpump");
		//TNT1 AAAAAAAAAAAA 0 A_Raise
		//SHTN A 0 A_GunFlash

	Ready3:	
	Ready:
	    TNT1 A 0
		{
		A_Setroll(0, SPF_INTERPOLATE);
	    A_Takeinventory("ScreenTilt",1);
	    }
	    TNT1 A 0
		{
		If(CountInv("ShotgunAmmo") >=11 ) {return resolvestate("FixAmmo");}
		//Else If(CountInv("FireFromReloading") >=11 ) {return state("FireFromReloading");}
		//Else If(CountInv("ReloadingShotgun") >=11 ) {return state("FireFromReloading");}
		Else If(CountInv("Kicking") >=1 ) {return resolvestate("DoKick");}
		Else If(CountInv("Reloading") >=1 ) {return resolvestate("Reload");}
		Else If(CountInv("Taunting") >=1 ) {return resolvestate("Taunt");}
		Else If(CountInv("Salute1") >=1 ) {return resolvestate("Salute");}
		Else If(CountInv("Unloading") >=1 ) {return resolvestate("Unload");}
		Else If(CountInv("Zoomed") >=1 ) {return resolvestate("REady2");}
		Else If(CountInv("FiredPrimary") >=1 ) {return resolvestate("Fire");}
		Else {return resolvestate(null);}
		}
	OkToFire:
		TNT1 A 0 A_SetCrosshair(45);
		SHTN A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
		SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
        Goto Ready;
	FixAmmo:
	    PIST F 0 A_Takeinventory("ShotgunAmmo",99999);
		PIST F 0 A_Giveinventory("ShotgunAmmo",10);
		Goto Ready;
		
	Ready2:
        SHTN A 0 A_JumpIfInventory("Kicking",1,"DoKick");
        SHTN A 0 A_JumpIfInventory("Taunting",1,"Taunt");
        SHTN A 0 A_JumpIfInventory("Reloading",1,"Reload");
		SHTN A 0 A_JumpIfInventory("Salute1", 1, "Salute");
		SHTN A 0 A_JumpIfInventory("Salute2", 1, "Salute");
		SHTN A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
		SHTN A 0 A_JumpIfInventory("Unloading",1,"Unload");
		//SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHTN A 0 A_JumpIfInventory("QuickMelee",1,"DoQuickMelee");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		TNT1 A 0 A_SetCrosshair(41);
		Loop;
	
	Deselect:
		SHTN A 0;
		SHTN A 0 A_Takeinventory("Zoomed",1);
		SHTN A 0 A_TakeInventory("TossGrenade", 1);
		SHTN A 0 A_Takeinventory("ADSmode",1);
		SHTN A 0 A_Takeinventory("UseShotgunStrap",1);
        SHTN A 0 A_ZoomFactor(1.0);
		SHSS DCBA 1;
		TNT1 A 0 ZWL_QuickLower();
		Wait;

	//FireFromReloading:
	//SHTN A 0 A_Takeinventory("FireFromReloading",1)
	
    Fire:
        SHTN A 0 A_Takeinventory("Reloading",1);
		SHTN A 0 A_JumpIfInventory("Zoomed",1,"Fire2");
		
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,2);
        Goto NoAmmo;
        TNT1 AAAA 0;
		// You can't fire during reload, so this way you can go back to ready and fire.
		TNT1 A 0
		{
		 if(Invoker.ReloadingShotgun == true){return resolvestate("FinishedInsertingShellsEmergency");}
		 return resolvestate(null);
		}
		TNT1 AAAAA 0
		{
		 A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -1, 0, 0, random(-9,9));
		 A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -1, 0, 0, random(-9,9));
		}
		SHTA A 1 BRIGHT
		{
        A_AlertMonsters();
        A_PlaySound("SGFIRE", 1);
		A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1));
		A_SpawnItemEx("PlayerMuzzle1",30,5,30);
		A_Takeinventory("ShotgunAmmo",1);
		// 5 Shotgun Tracers
		ZWL_FireHitscan(1, 40, pellets:5, spread:1, damagetype:"", pufftype:"ShotgunPuff",tracertype:"DecorativeTracer",Offset:(0,0,-5));
		//A_FireBullets (2.5, 2.5, 5, 40, "ShotgunPuff", FBF_NORANDOM,8192,"DecorativeTracer",-5);
		//A_FireBullets (2.5, 2.5, 5, 20, "ShotgunPuff2", FBF_NORANDOM,8192,"Tracer",-5);
		if (CountInv("PowerStrength") >= 1 )
		  {
		   A_SetPitch(pitch-0.1, SPF_INTERPOLATE);
		   //A_SetAngle(angle-0.1, SPF_INTERPOLATE);
		  }
		 else
		  {
		   A_SetPitch(pitch-0.05, SPF_INTERPOLATE);
		   //A_SetAngle(angle-0.01, SPF_INTERPOLATE);
		  }
		}
	    SHTA C 1
		{
		if (CountInv("PowerStrength") >= 1 )
		  {
		   A_SetPitch(pitch-0.5, SPF_INTERPOLATE);
		   //A_SetAngle(angle-0.5, SPF_INTERPOLATE);
		  }
		 else
		  {
		   A_SetPitch(pitch-1, SPF_INTERPOLATE);
		   //A_SetAngle(angle-1, SPF_INTERPOLATE);
		  }
		}
		Goto Pump1;
	
   Pump1:	
       SHTN A 0 A_JumpIfInventory("Zoomed",1,"PumpFromADS") ;
	   TNT1 A 0 A_Giveinventory("ScreenTilt",1);
	   SHTN BCDEFGHI 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.2, SPF_INTERPOLATE); 
	   }
   PumpFromADS:
       TNT1 A 0 A_Giveinventory("ScreenTilt",1);
	   SHTN J 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.2, SPF_INTERPOLATE); 
	   }
	   SHTN A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,-8,-26); // The actor that fires the projectile has a delay of 1 tic
	   SHTN K 1
	   {
		  //A_Giveinventory("ScreenTilt",1);
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.4, SPF_INTERPOLATE); 
				 A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN L 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.4, SPF_INTERPOLATE);  
	   }
	   SHTN M 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.8, SPF_INTERPOLATE); 
	   }
	   SHTN NOP 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.1, SPF_INTERPOLATE); 
	   }
	   SHTN PON 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.1, SPF_INTERPOLATE); 
	   }
	   SHTN M 1
	   {
	    A_WeaponReady(WRF_NOFIRE);
		A_Setroll(roll+0.8, SPF_INTERPOLATE); 
		A_PlaySound("weapons/sgpump", 3);
	   }
	  SHTN L 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.4, SPF_INTERPOLATE);  
	   }
	   SHTN K 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.4, SPF_INTERPOLATE); 
	   }
	   SHTN J 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.2, SPF_INTERPOLATE); 
	   }
	   SHTN A 0 A_JumpIfInventory("Zoomed",1,"PumpADSFinish");
	   SHTN IHGFEDCB 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.2, SPF_INTERPOLATE); 
	   }
	   SHTN A 1
	   {
	   A_Setroll(0, SPF_INTERPOLATE);
	   A_Takeinventory("ScreenTilt",1);
	   A_WeaponReady();
	   }
	   Goto Ready3;//ReadyToFireAgain
	   
	   PumpADSFinish:
	   TNT1 A 0
	   {
	   A_Setroll(0, SPF_INTERPOLATE);
	   A_Takeinventory("ScreenTilt",1);
	   A_WeaponReady();
	   }
	   SHT8 LKJ 1;
	   Goto Ready2;
	   
	 
   Pump2:
       //SHTN A 0 A_Takeinventory("ShotgunWasEmpty",1);
	   TNT1 A 0
		{
		 Invoker.ShotgunIsEmpty = false; 
		}
	   //TNT1 A 0 A_Giveinventory("ScreenTilt",1)
	   SHTN Q 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.2, SPF_INTERPOLATE); 
	   }
	   SHTN J 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.2, SPF_INTERPOLATE); 
	   }
	   SHTN A 0 A_FireCustomMissile("ShotCaseSpawn",40,0,-8,-26); // The actor that fires the projectile has a delay of 1 tic
	   SHTN K 1
	   {
		  //A_Giveinventory("ScreenTilt",1);
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.4, SPF_INTERPOLATE); 
				 A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN L 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.4, SPF_INTERPOLATE);  
	   }
	   SHTN M 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.8, SPF_INTERPOLATE); 
	   }
	   SHTN NOP 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.1, SPF_INTERPOLATE); 
	   }
	   SHTN PON 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.1, SPF_INTERPOLATE); 
	   }
	   SHTN M 1
	   {
	    A_WeaponReady(WRF_NOFIRE);
		A_Setroll(roll+0.8, SPF_INTERPOLATE); 
		A_PlaySound("weapons/sgpump", 3);
	   }
	   SHTN L 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.4, SPF_INTERPOLATE);  
	   }
	   SHTN K 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.4, SPF_INTERPOLATE); 
	   }
	   SHTN J 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll+0.2, SPF_INTERPOLATE); 
	   }
	   SHTN Q 1
	   {
		  A_WeaponReady(WRF_NOFIRE);
		  A_Setroll(roll-0.2, SPF_INTERPOLATE); 
	   }
	   Goto InsertingShells;
		
	ReadyToFireAgain:	
		//SHTN A 6 <-- Old frame
        SHTN A 1 Offset(10,36); // <-- New frames
        SHTN A 1 Offset(9,40); //
        SHTN A 1 Offset(4,40); //
        SHTN A 1 Offset(0,32); //
        SHTN A 0 A_Refire;
		Goto Ready3;
		
	Fire2:
		SHTN A 0 A_Takeinventory("Reloading",1);
        SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,1);
        Goto NoAmmo;
		SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2");
        SHTN A 0 A_AlertMonsters;
        SHTN A 0 A_PlaySound("SGFIRE", 1);
		SHTN A 0 A_SpawnItemEx("PlayerMuzzle1",30,0,45);
		SHTN A 0 //A_FireBullets (2.5, 2.5, 5, 40, "ShotgunPuff", FBF_NORANDOM,8192,"DecorativeTracer",-5);
		{
		ZWL_FireHitscan(2, 40, pellets:5, spread:2, damagetype:"Normal", pufftype:"ShotgunPuff",tracertype:"DecorativeTracer",Offset:(0,0,-5));
		}
		SHTN A 0;
		RIFF A 0 A_FireCustomMissile("DistantFireSoundShotgun", random(-1,1), 0, 0, -12, 0, random(-1,1));
		TNT1 AAAAA 0 A_FireCustomMissile("DecorativeTracer", random(-5,5), 0, 0, 0, 0, random(-5,5));
		SHTN A 0 A_Takeinventory("ShotgunAmmo",1);
        SHT8 BC 1 BRIGHT;
		SHT8 DE 1 A_SetPitch(pitch-2);
		SHT8 E 4;
		SHT8 FGH 1;
		SHT8 A 1;
		SHT8 JKL 1;
		Goto Pump1;

	AltFire:
        SHTN A 0;
		SHTN A 0 A_Giveinventory("GoSpecial",1);
		SHTN A 0 A_JumpIfInventory("Zoomed",1,"NoAim");
		SHTN A 0 A_Giveinventory("Zoomed",1);
        SHTN A 0 A_ZoomFactor(1.2);
		SHTN A 0 A_Giveinventory("ADSmode",1);
        SHT8 I 1;
		//SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump3")
        SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 2 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHTN A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim");
        Goto Ready2;
		
	   HoldAim:	
	    SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredPrimary",1,"Fire");
		SHT8 A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		SHTN A 0 A_JumpIfInventory("FiredSecondary",1,"HoldAim");
		
	NoAim:	
        TNT1 AAAAAA 0;
		SHTN A 0 A_Takeinventory("Zoomed",1);
        SHTN A 0 A_ZoomFactor(1.0);
		SHTN A 0 A_Takeinventory("ADSmode",1);
		SHTN A 0 A_Giveinventory("GoSpecial",1);
		SHT8 DE 1;
        Goto Ready;
		
	
	/*
	CheckSprint:
		SHTN A 1 A_WeaponReady(WRF_NOFIRE)
		SHTN A 0 A_Takeinventory("Zoomed",1)
        SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_Giveinventory("GoSpecial",1)
		SHTN A 0 A_JumpIfInventory("IsStandingStill", 1, "Ready3")
		SHTN A 0 A_JumpIfInventory("IsTacticalClass", 1, "StartSprint")
		Goto Ready
		
	StartSprint:
		SHTN A 1 A_WeaponReady(WRF_NOFIRE)
		SHTN A 0 A_Takeinventory("Zoomed",1)
		SHTN A 0 A_Takeinventory("ADSmode",1)
		SHTN A 0 A_ZoomFactor(1.0)
		SHTN A 0 A_JumpIfInventory("UsedStamina", 40, "StopSprintTired")
		
	Sprinting:	
		STRN A 0 offset(-9,32) 
		SHTN A 0 offset(-9,32) A_JumpIfInventory("IsStandingStill", 1, "Ready3")
		SHTN A 0 offset(-9,32) A_JumpIfInventory("UsedStamina", 100, "StopSprintTired")
		PLAY A 0 offset(-9,32) ACS_ExecuteAlways(852, 0, 0, 0, 0)//Makes player faster.
		SHTN A 0 offset(-9,32) A_JumpIfInventory("PowerStrength", 1, 2)
		SHTN A 0 offset(-9,32) A_GiveInventory("UsedStamina", 5)
		SHTN A 0 offset(-9,32)
		STRN A 1 offset(-9,34) A_SetPitch(pitch -0.5)
		STRN A 1 offset(-6,36) A_SetPitch(pitch -0.5)
		STRN A 1 offset(-3,38) A_SetPitch(pitch -0.5)
		STRN A 1 offset(0,38) A_SetPitch(pitch -0.5)
		STRN A 1 offset(3,36) A_SetPitch(pitch -0.5)
		STRN A 1 offset(6,34) A_SetPitch(pitch -0.5)
		STRN A 1 offset(9,32) A_SetPitch(pitch -0.5)
		SHTN A 0 offset(9,32) A_WeaponReady(WRF_NOBOB)
		SHTN A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        SHTN A 0 A_JumpIfInventory("Taunting",1,"Taunt")
        SHTN A 0 A_JumpIfInventory("Reloading",1,"Reload")
		SHTN A 0 offset(-9,32) A_GiveInventory("UsedStamina", 5)
		SHTN A 0 offset(9,33) A_SpawnItemEx("FootStep", 0, 0, 2, 0, 0, -4)
		STRN A 1 offset(9,34) A_SetPitch(pitch +0.5)
		STRN A 1 offset(6,36) A_SetPitch(pitch +0.5)
		STRN A 1 offset(3,38) A_SetPitch(pitch +0.5)
		STRN A 1 offset(0,38) A_SetPitch(pitch +0.5)
		STRN A 1 offset(-3,36) A_SetPitch(pitch +0.5)
		STRN A 1 offset(-6,34) A_SetPitch(pitch +0.5)
		STRN A 1 offset(-9,32) A_SetPitch(pitch +0.5)
		SHTN A 0 offset(-9,32) A_WeaponReady(WRF_NOBOB)
		SHTN A 0 offset(-9,32) A_JumpIfInventory("IsRunning", 1, "Sprinting")
		
		Goto StopSprint
	StopSprintTired:
		SHTN A 1
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
		SHTN A 0 A_PlaySound("Tired", 2)
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		SHTN A 0 A_TakeInventory("UsedStamina", 2)
		SHTN A 5 A_WeaponReady
		Goto Ready
	StopSprint:
		STRN A 1
		SHTN A 0 A_JumpIfInventory("UsedStamina", 60, "StopSprintTired")
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
		Goto Ready
	*/	
	
	
    ReloadWithNoAmmoLeft:
    Reload:
	    SHTN A 0;
		SHTN A 0 A_TakeInventory("Reloading", 1);
		//SHTN A 0 A_GiveInventory("Reloading", 1)
		SHTN A 0 A_JumpIfInventory("AmmoShell", 1, 2);
		Goto NoAmmo;
		SHTN A 0;
		SHTN A 0 A_Takeinventory("Zoomed",1);
        SHTN A 0 A_ZoomFactor(1.0);
		SHTN A 1 A_WeaponReady;
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"OkToFire");
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo", 1, "ReloadNormally");//Check if there is a shell in the chamber
		TNT1 A 0
		{
		 Invoker.ShotgunIsEmpty = true; //This means there is no shell in the chamber
		}
	
	ReloadNormally:	
        SHTN A 0 A_JumpIfInventory("AmmoShell",1,1);//If there is no reserve ammo, don't reload, go back to Ready
        Goto Ready;
		SHTN A 0 A_JumpIfInventory("TurboReload", 1, "TurboReload");//Check if reloads are disabled.
		SHTN BCDEFGHIJ 1
		{
		A_Giveinventory("ScreenTilt",1);
		A_Setroll(roll+0.2, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		}
		SHTN Q 1
		{
		//A_Giveinventory("ScreenTilt",1);
		A_Setroll(roll-0.4, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		}
		//SSHR A 1 A_WeaponReady(WRF_NOFIRE)
        
	 InsertingShells:
		//SHTN A 0 A_GiveInventory("ReloadingShotgun", 1);
		TNT1 A 0
		{
		 Invoker.ReloadingShotgun = true;
		}
		SHTN A 0;
		SHTN A 0 A_JumpIfInventory("AmmoShell",1,2);//if there are no more reserve shells, finish reload.
        //Goto Pump2
		Goto FinishedInsertingShells;
		SHTN A 0;
		SHTN A 0 A_GiveInventory ("Pumping", 1);
		SSHR A 0 A_TakeInventory("Reloading", 1);
        SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"FinishedInsertingShells");
        
	InsertShellAnimation:	
		SHTN A 0;
		SSHR A 1
		{
		  A_WeaponReady();
	    }
		SSHR BCD 1 A_WeaponReady(WRF_NOFIRE);
		SSHR E 1
		{
		A_Setroll(roll+0.2, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		}
		SSHR F 1
		{
		A_Setroll(roll+0.2, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		}
        SSHR G 1
		{
		 A_Setroll(roll-0.2, SPF_INTERPOLATE);
		 A_PlaySound("insertshell", 1);
		 A_Giveinventory("ShotgunAmmo",1);
		 A_Takeinventory("AmmoShell",1);
		 A_WeaponReady(WRF_NOFIRE);
		}
		SSHR H 1
		{
		 A_Setroll(roll-0.2, SPF_INTERPOLATE);
		 A_WeaponReady(WRF_NOFIRE);
		}
		TNT1 A 0
		{
		 if(Invoker.ShotgunIsEmpty == true){return resolvestate("Pump2");}
		 return resolvestate(null);
		}
		SHTN A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"FinishedInsertingShells");//If there are 9+1 shells, stop it immediately
        Goto InsertingShells;
		
	FinishedInsertingShells:
		//SHTN A 0 A_TakeInventory("ReloadingShotgun", 1);
		TNT1 A 0
		{
		 Invoker.ReloadingShotgun = false;
		}
		SHTN A 0 A_Takeinventory("Reloading",1);
		//SHTN A 0 A_JumpIfInventory("ShotgunWasEmpty", 1, "Pump2")
		SHTN Q 1
		{
		//A_Giveinventory("ScreenTilt",1);
		A_Setroll(roll-0.2, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		}
		SHTN JIHGFEDCB 1
		{
		A_Setroll(roll-0.2, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		//A_Takeinventory("ScreenTilt",1);
		}
		SHTN A 1
		{
		A_Setroll(0, SPF_INTERPOLATE);
		A_Takeinventory("ScreenTilt",1);
		A_WeaponReady();
		}
		SHTN A 0 A_Takeinventory("Reloading",1);
		Goto Ready3;
	
	FinishedInsertingShellsEmergency:
	    //SHTN A 0 A_GiveInventory("FireFromReloading", 1)
		//SHTN A 0 A_TakeInventory("ReloadingShotgun", 1);
		SHTN A 0 A_Takeinventory("Reloading",1);
		TNT1 A 0
		{
		 Invoker.ReloadingShotgun = false;
		}
		SHTN Q 1
		{
		//A_Giveinventory("ScreenTilt",1);
		A_Setroll(roll-0.2, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		}
		SHTN JIHGFEDCB 1
		{
		A_Setroll(roll-0.2, SPF_INTERPOLATE);
		A_WeaponReady(WRF_NOFIRE);
		//A_Takeinventory("ScreenTilt",1);
		}
		SHTN A 1
		{
		A_Setroll(0, SPF_INTERPOLATE);
		A_Takeinventory("ScreenTilt",1);
		A_WeaponReady();
		}
		SHTN A 0 A_Takeinventory("Reloading",1);
		Goto Ready3;
		
	
	 TurboReload:
		SHSS BC 0;
	TurboBullets:	
		SHTN A 0;
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"FinishTurboReload");
        SHTN A 0 A_JumpIfInventory("AmmoShell",1,3);
        Goto FinishTurboReload;
        TNT1 AAAA 0;
        SHTN A 0 A_Giveinventory("ShotgunAmmo",1);
		SHTN A 0 A_Takeinventory("AmmoShell",1);
		Goto TurboBullets;
	FinishTurboReload:
		SHTN A 1;
		SHTN A 1 A_Refire;
		Goto Ready3;
		
	TurboReload2:
		SHSS BC 0;
	TurboBullets2:	
		SHTN A 0;
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",10,"FinishTurboReload");
        SHTN A 0 A_JumpIfInventory("AmmoShell",1,3);
        Goto FinishTurboReload2;
        TNT1 AAAA 0;
        SHTN A 0 A_Giveinventory("ShotgunAmmo",1);
		SHTN A 0 A_Takeinventory("AmmoShell",1);
		Goto TurboBullets2;
	FinishTurboReload2:
		SHT8 A 1 A_Refire;
		Goto Ready2;

      PuristGun:
		TNT1 A 1;
		SHTN A 0 A_GiveInventory("ClassicShotgun", 1);
		SHTN A 0 A_TakeInventory("Shot_Gun", 1);
		TNT1 A 10;
		Goto Ready2;
		
	
		
	Unload:
		SHTN A 1;
		SHTN A 0 A_ZoomFactor(1.0);
		SHTN A 0 A_Takeinventory("Unloading",1);
		SHTN A 0 A_Takeinventory("ADSmode",1);
		SHTN A 0 A_Takeinventory("Zoomed",1);
		SHTN A 0 A_GiveInventory("ShotgunWasEmpty", 1);
        SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,3);
        Goto OkToFire;
        TNT1 AAA 0;
		SHTN A 0 A_Takeinventory("Zoomed",1);
		SHTN A 0 A_GiveInventory ("Pumping", 1);
		SHTN A 0 A_Takeinventory("Unloading",1);
		SHTN ABCDEF 1;
		
	RemoveBullets:
		TNT1 AAAA 0;
		SHTN A 0 A_JumpIfInventory("ShotgunAmmo",1,3);
		Goto FinishUnload;
        TNT1 AAAAAA 0;
		SHTN A 0 A_Takeinventory("ShotgunAmmo",1);
		SHTN A 0 A_Giveinventory("AmmoShell",1);
		
		SHTN G 1 A_WeaponReady(WRF_NOFIRE);
	   SHTN H 1
	   {
	   A_WeaponReady(WRF_NOFIRE);
	   A_PlaySound("weapons/sgpump", 3);
	   }
	   //SHTN A 0 A_SetPitch(+1 + pitch)
	   SHTN IJ 1 A_WeaponReady(WRF_NOFIRE);
	   //SHTN A 0 A_SetPitch(-1 + pitch)
	   SHTN KL 1 A_WeaponReady(WRF_NOFIRE);
	   SHTN KJIH 1 A_WeaponReady(WRF_NOFIRE);
	   SHTN A 0 A_Giveinventory("ShotgunWasEmpty",1);
	   SHTN GF 1 A_WeaponReady(WRF_NOFIRE);
		Goto RemoveBullets;
	
	FInishUnload:
		SHTN EDCBA 1;
		SHTN A 0 A_Takeinventory("Unloading",1);
		Goto OkToFire;
		
		
	DoKickReloading:
		NULL A 0 A_JumpIf (momZ > 0, "AirKick");
		NULL A 0 A_JumpIf (momZ < 0, "AirKick");
        SHTN A 0 A_PlaySound("KICK");
		SHTN A 0 SetPlayerProperty(0,1,0);
		KICK BCD 1;
		RIFF A 0 A_FireCustomMissile("KickAttack", 0, 0, 0, -7);
        KICK H 3;
		KICK A 0 A_Takeinventory("Kicking",1);
		KICK I 1;
		KICK GFEDCBA 1 ;
		RIBA A 0 A_Takeinventory("Kicking",1);
		SHTN A 0 SetPlayerProperty(0,0,0);
		Goto InsertingShells;
		
	Steady:
		TNT1 A 1;
		Goto Ready;
		
		

	NoAmmo:
		RIFG A 0;
		RIFG A 0 A_ZoomFactor(1.0);
		RIFG A 0 A_Takeinventory("Zoomed",1);
		RIFG A 0 A_Takeinventory("ADSmode",1);
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		TNT1 A 0 A_PlaySound("weapons/empty", 4);
		NoAmmo2:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt");
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute");
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute");
		//RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution");
		RIFG A 0 A_JumpIfInventory("Kicking",1,"DoKick");
		SHTN A 5 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOPRIMARY);
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "NoAmmo2");
		RIFG A 0 A_JumpIfInventory("AmmoShell",1,"Reload");
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2");
		Goto Ready3;
		
		
	NoAmmo3:
		RIFG A 0 A_JumpIfInventory("TossGrenade",1,"TossGrenade");
	    RIFG A 0 A_JumpIfInventory("Taunting",1,"Taunt");
		RIFG A 0 A_JumpIfInventory("Salute1", 1, "Salute");
		RIFG A 0 A_JumpIfInventory("Salute2", 1, "Salute");
		//RIFG A 0 A_JumpIfInventory("IsRunning",1,"CheckSprint");
		RIFG A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution");
		RIFG A 0 A_JumpIfInventory("Kicking",1,"DoKick");
		SHT8 A 4 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOPRIMARY);
		RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload");
		RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload2");
		TNT1 A 0 A_JumpIfInventory("NoAutoReload", 1, "NoAmmo3");
		RIFG A 0 A_JumpIfInventory("AmmoShell",1,"Reload");
		RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo3");
		Goto Ready3;
	
	FlashMelee:
	Flashkick:
	    SHSS D 1;
	    SHSS C 17;
		SHSS D 1;
		Stop;
	
	FlashMelee:
	    SHTN BCD 1;
	    SHTN E 1;
		SHTN DCB 1;
		Stop;
	
	AirFlashkick:
	    SHSS D 1;
	    SHSS C 17;
		SHSS D 1;
		Stop;
	
	SlideFlashKick:
	    SHSS D 1;
	    SHTN C 15;
		Stop;
	
	SlideFlashKickStop:
	    SHSS C 12;
		SHSS D 1;
		Stop;
			
	}
}