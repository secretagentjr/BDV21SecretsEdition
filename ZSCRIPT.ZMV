//Version "3.8"
//Version "4.1.1"
Version 4.2.4

#include "zscript/Footsteps/StepEventHandler.zc"

// Zweaponslist
#include "zscript/zwl/zwl.zs"
//#include "zscript/huds/status_bar.zs"

#include "zscript/weapons/DEFAULTWEAPON.zsc"
#include "zscript/weapons/PISTOL.zsc"
#include "zscript/weapons/RIFLE.zsc"
#include "zscript/weapons/SubMachinegun.zsc"
//#include "zscript/weapons/DualSMG.zsc"
#include "zscript/weapons/Shotgun.zsc"
#include "zscript/weapons/SSG.zsc"
#include "zscript/weapons/Minigun.zsc"
#include "zscript/weapons/Plasma.zsc"
#include "zscript/weapons/BFG.zsc"
#include "zscript/weapons/tracers.zsc"

//#include "zscript/misc/Footsteps3.txt"
#include "zscript/misc/tp_tips.zs"

#include "zscript/Tilt/TiltPlusPlus.zc"
#include "zscript/Tilt/TiltPlusPlusMenu.zc"

// Zmovement
#include "ZScript/ZMovePlayer.ZMV"
#include "ZScript/ZMoveMenu.ZMV"
#include "ZScript/Backpack.txt"



// HitBoxes
#include "ZScript/Hitbox.zsc"
// Monster Base
#include "ZScript/MONSTERS/MonsterBase.zsc"

// Spawners.
#include "ZScript/Spawners/Armorg.zsc"
#include "ZScript/Spawners/Armorb.zsc"
#include "ZScript/Spawners/SoulSphere.zsc"
#include "ZScript/Spawners/MegaSphere.zsc"
#include "ZScript/Spawners/AutoMap.zsc"
#include "ZScript/Spawners/HealthS.zsc"
#include "ZScript/Spawners/BonusesS.zsc"

// Easier To Add to and Easier to Remove List For Enemies.

#include "ZScript/Spawners/Monsters/SpawnerBase.zs"
// Die Demon! You don't belong in this world.
// Humanoids
#include "ZScript/Spawners/Monsters/ZombieManS.zsc"
#include "ZScript/Spawners/Monsters/SergeantS.zsc"
#include "ZScript/Spawners/Monsters/ComandoS.zsc"
//Demons
#include "ZScript/Spawners/Monsters/ImpS.zsc"
#include "ZScript/Spawners/Monsters/DemonS.zsc"
#include "ZScript/Spawners/Monsters/SpectroS.zsc"
// Special Demons
#include "ZScript/Spawners/Monsters/KnightS.zsc"
#include "ZScript/Spawners/Monsters/BaronS.zsc"
// Tomatoes
#include "ZScript/Spawners/Monsters/CacoDemonS.zsc"
// Spooky Scary Skeletons(Seal your DOOM tonight)
#include "ZScript/Spawners/Monsters/RevenantS.zsc"
// FlameBoi
#include "ZScript/Spawners/Monsters/ArchVileS.zsc"
// Top Tier Demons
#include "ZScript/Spawners/Monsters/MasterMindS.zsc"
#include "ZScript/Spawners/Monsters/CyberDemonS.zsc"
//  Mid-Tier Demons
#include "ZScript/Spawners/Monsters/MancubusS.zsc"
#include "ZScript/Spawners/Monsters/LostSoulS.zsc"
#include "ZScript/Spawners/Monsters/PainES.zsc"
#include "ZScript/Spawners/Monsters/ArachnoidsS.zsc"

// Pixel Eater

class MBlurHandler : StaticEventHandler
{
	int			pitch, yaw ;
	double		xtravel, ytravel ;
	
	override void PlayerEntered( PlayerEvent e )
	{
		PlayerInfo plr = players[ e.PlayerNumber ];
		if( plr )
		{	
			xtravel = 0 ;
			ytravel = 0 ;
		}
	}
	
	override void WorldTick()
	{
		PlayerInfo	plr = players[ consoleplayer ];
		if( plr && plr.health > 0 && Cvar.GetCVar( "mblur", plr ).GetBool() )
		{
			yaw		= plr.mo.GetPlayerInput( ModInput_Yaw );
			pitch	= -plr.mo.GetPlayerInput( ModInput_Pitch );
		}
	}
	
	override void NetworkProcess( ConsoleEvent e )
	{
		PlayerInfo	plr = players[ e.Player ];
		if( plr && e.Name == "liveupdate" )
		{
			double pitchcurve ;
			if( Cvar.GetCVar( "mblur_pcurve", plr ).GetInt() == 1 )	pitchcurve = sin( 90. - abs( plr.mo.pitch ));
			else														pitchcurve = sqrt( 1. - abs( plr.mo.pitch * 1. / 90 ));
			
			double amount		= Cvar.GetCVar( "mblur_strength", plr ).GetFloat() * 10. / 32767 * pitchcurve ;
			double amount_walk	= Cvar.GetCVar( "mblur_strength_walk", plr ).GetFloat() * .1 ;
			double amount_jump	= Cvar.GetCVar( "mblur_strength_jump", plr ).GetFloat() * .1 * pitchcurve ;
			double decay		= 1. - Cvar.GetCVar( "mblur_recovery", plr ).GetFloat() * .01 ;
			
			xtravel				= xtravel * decay + yaw * amount * .625 ;
			ytravel				= ytravel * decay + pitch * amount ;
			
			if( Cvar.GetCVar( "mblur_autostop", plr ).GetBool() )
			{
				double threshold = Cvar.GetCVar( "mblur_threshold", plr ).GetFloat() * 30 ;
				double decay2 = 1 - Cvar.GetCVar( "mblur_recovery2", plr ).GetFloat() * .01 ;
				if( abs( yaw )		<= threshold ) xtravel *= decay2 ;
				if( abs( pitch )	<= threshold ) ytravel *= decay2 ;
			}
			
			double angle = plr.mo.vel.y >= 0 ? 0 : 180 ;
			if( plr.mo.vel.x != 0 )
			{
				angle = atan( plr.mo.vel.y / plr.mo.vel.x );
				
				if( plr.mo.vel.x < 0 )			angle += 180 ;
				else if( plr.mo.vel.y < 0 )	angle += 360 ;
			}
			angle				-= ( plr.mo.angle + 180 ) % 360 ;
			
			double velocity	= sqrt( plr.mo.vel.x * plr.mo.vel.x + plr.mo.vel.y * plr.mo.vel.y );
			double sidevel		= sin( angle ) * velocity ;
			double walkvel		= cos( angle ) * velocity ;
			if( plr.mo.pitch > 0 ) walkvel = -walkvel ;
			
			xtravel				+= sidevel * amount_walk * .625 ;
			ytravel				+= plr.mo.vel.z * amount_jump + walkvel * amount_walk * ( 1. - pitchcurve );
			
			//console.printf( "%f", angle );
		}
	}
	
	override void UiTick()
	{
		PlayerInfo	plr = players[ consoleplayer ];
		if( plr )
		{
			if( plr.health > 0 && Cvar.GetCVar( "mblur", plr ).GetBool() )//&& yaw && pitch )
			{
				EventHandler.SendNetworkEvent( "liveupdate" );
				
				vector2 travel		= ( xtravel / screen.getwidth(), ytravel / screen.getheight() );
				double dist			= sqrt( travel.x * travel.x + travel.y * travel.y );
				
				double dynsamps = 1. ;
				if( Cvar.GetCVar( "mblur_dynsamps", plr ).GetBool() ) dynsamps = dist * 12 ;
				
				int copies			= 1 + int( Cvar.GetCVar( "mblur_samples", plr ).GetInt() * dynsamps );
				double increment	= 1. / copies ;
				
				Shader.SetUniform2f( plr, "MBlur", "steps", travel * increment );
				Shader.SetUniform1i( plr, "MBlur", "samples", copies );
				Shader.SetUniform1f( plr, "MBlur", "increment", increment );
				Shader.SetUniform1i( plr, "MBlur", "blendmode", Cvar.GetCVar( "mblur_blendmode", plr ).GetInt() );
				//Shader.SetUniform1f( plr, "MBlur", "dist", dist );
					
				Shader.SetEnabled( plr, "MBlur", true );
			}
			else
			{
				Shader.SetEnabled( plr, "MBlur", false );
			}
		}
	}
}